{"ast":null,"code":"var _jsxFileName = \"/Users/samuel/starjosh/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet starUsers = [];\nlet totalLength = 0;\nlet speciesList = [];\n\nfunction getStarUsers() {\n  // Simple GET request using axios\n  axios.get('https://swapi.dev/api/people/').then(response => {\n    var starData = response.data.results;\n    totalLength = starData.length;\n\n    for (let user of starData) {\n      let species = user[\"species\"];\n\n      if (species.length == 0) {\n        species = \"Human\";\n\n        if (speciesList.indexOf(species) == -1) {\n          speciesList.push(species);\n        }\n\n        user[\"species\"] = species;\n        starUsers.push(user);\n      } else {\n        axios.get(species).then(spResponse => {\n          species = spResponse.data[\"name\"];\n\n          if (speciesList.indexOf(species) == -1) {\n            speciesList.push(species);\n          }\n\n          user[\"species\"] = species;\n          starUsers.push(user);\n        });\n      }\n    }\n\n    function waitForElement() {\n      if (starUsers.length == totalLength) {\n        let sortedList = [];\n\n        while (speciesList.length > 0) {\n          var currentSpecies = speciesList[speciesList.length - 1];\n\n          for (let user of starUsers) {\n            if (user[\"species\"] == currentSpecies) {\n              sortedList.push(user);\n            }\n          }\n\n          speciesList.pop(currentSpecies);\n        }\n\n        var lastSpecies = \"\";\n        ReactDOM.render(starUsers.map(starUser => {\n          if (lastSpecies != starUser[\"species\"]) {\n            lastSpecies = starUser[\"species\"];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new\",\n              children: [starUser['name'], \" \"]\n            }, starUser['name'], true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 23\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: starUser['name']\n            }, starUser['name'], false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 22\n            }, this);\n          }\n        }), document.getElementById('root'));\n      } else {\n        setTimeout(waitForElement, 200);\n      }\n    }\n\n    waitForElement();\n  });\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 84,\n  columnNumber: 3\n}, this), document.getElementById('root'));\ngetStarUsers(); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/samuel/starjosh/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","render","axios","starUsers","totalLength","speciesList","getStarUsers","get","then","response","starData","data","results","length","user","species","indexOf","push","spResponse","waitForElement","sortedList","currentSpecies","pop","lastSpecies","map","starUser","document","getElementById","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\n\nlet starUsers = [];\nlet totalLength = 0;\nlet speciesList=[]\nfunction getStarUsers() {\n  // Simple GET request using axios\n  axios.get('https://swapi.dev/api/people/')\n    .then(response => {\n      var starData = (response.data.results)\n\n      totalLength = starData.length\n      for (let user of starData) {\n\n       let species = user[\"species\"]\n\n        if (species.length == 0) {\n          species = \"Human\"\n          if(speciesList.indexOf(species)==-1){\n            speciesList.push(species)\n          }\n          user[\"species\"]=species\n          starUsers.push(user)\n        }\n        else {\n         \n          axios.get(species)\n            .then(spResponse => {\n             \n              species = spResponse.data[\"name\"]\n              if(speciesList.indexOf(species)==-1){\n                speciesList.push(species)\n              }\n              user[\"species\"]=species\n              starUsers.push(user)\n            })\n        }\n      }\n      function waitForElement() {\n    \n        if (starUsers.length==totalLength) {\n \n          let sortedList=[]\n   \n          while(speciesList.length>0){\n            var currentSpecies=speciesList[speciesList.length-1]\n            for(let user of starUsers){\n\n              if(user[\"species\"]==currentSpecies){\n                sortedList.push(user)\n              }\n            }\n            speciesList.pop(currentSpecies)\n          }\n          var lastSpecies=\"\"\n          ReactDOM.render(starUsers.map(starUser => {\n            if(lastSpecies!=starUser[\"species\"]){\n              lastSpecies=starUser[\"species\"]\n               return <div className=\"new\" key={starUser['name']}>{starUser['name']} </div>\n            }\n            else{\n              return <div className=\"card\" key={starUser['name']}>{starUser['name']}</div>\n            }\n         \n          }), document.getElementById('root'));\n        \n        }\n        else {\n          setTimeout(waitForElement, 200);\n        }\n      }\n      waitForElement()\n    }\n    )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\ngetStarUsers()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}