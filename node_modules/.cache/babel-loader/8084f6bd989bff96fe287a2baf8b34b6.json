{"ast":null,"code":"var _jsxFileName = \"/Users/samuel/starjosh/src/Home.js\";\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet starUsers = [];\nlet totalLength = 0;\nlet speciesList = [];\nlet currentSearch = [];\n\nfunction searchForUser(passed) {\n  console.log(passed);\n}\n\nconst SearchBar = ({\n  keyword,\n  setKeyword\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"search\",\n    value: keyword,\n    placeholder: \"Search for user\",\n    onChange: e => searchForUser(e.target.value)\n  }, \"random1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_c = SearchBar;\n\nfunction addUser(speciesList, species, user, starUsers) {\n  if (speciesList.indexOf(species) == -1) {\n    speciesList.push(species);\n  }\n\n  user[\"species\"] = species;\n  starUsers.push(user);\n}\n\nfunction getStarUsers() {\n  axios.get('https://swapi.dev/api/people/').then(response => {\n    var starData = response.data.results;\n    totalLength = starData.length;\n\n    for (let user of starData) {\n      let species = user[\"species\"];\n\n      if (species.length == 0) {\n        species = \"Human\";\n        addUser(speciesList, species, user, starUsers);\n      } else {\n        axios.get(species).then(spResponse => {\n          species = spResponse.data[\"name\"];\n          addUser(speciesList, species, user, starUsers);\n        });\n      }\n    }\n\n    function waitForCalls() {\n      if (starUsers.length == totalLength) {\n        let sortedList = [];\n\n        while (speciesList.length > 0) {\n          var currentSpecies = speciesList[speciesList.length - 1];\n\n          for (let user of starUsers) {\n            if (user[\"species\"] == currentSpecies) {\n              sortedList.push(user);\n            }\n          }\n\n          speciesList.pop(currentSpecies);\n        }\n\n        function goToPage(passedName) {\n          window.location.href = 'http://localhost:3000/user/' + passedName;\n          console.log(passedName);\n        }\n\n        var allcard = starUsers.map(starUser => {\n          var titleClass = \"title \" + starUser['species'];\n          var typeClass = \"type \" + starUser['species'];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => goToPage(starUser['name']),\n            className: titleClass,\n            children: [starUser['name'], /*#__PURE__*/_jsxDEV(\"div\", {\n              className: typeClass,\n              children: starUser['species']\n            }, starUser['name'] + starUser['species'], false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, starUser['name'], true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 32\n          }, this);\n        });\n\n        var allUI = /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"noBorder bigTitle\",\n          children: [\"\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 Star Records\", /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), allcard]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 31\n        }, this);\n\n        ReactDOM.render(allUI, document.getElementById('root'));\n      } else {\n        setTimeout(waitForCalls, 200);\n      }\n    }\n\n    waitForCalls();\n  });\n}\n\nexport default function Home() {\n  getStarUsers();\n  return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 12\n  }, this);\n}\n_c2 = Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/samuel/starjosh/src/Home.js"],"names":["ReactDOM","React","render","axios","starUsers","totalLength","speciesList","currentSearch","searchForUser","passed","console","log","SearchBar","keyword","setKeyword","e","target","value","addUser","species","user","indexOf","push","getStarUsers","get","then","response","starData","data","results","length","spResponse","waitForCalls","sortedList","currentSpecies","pop","goToPage","passedName","window","location","href","allcard","map","starUser","titleClass","typeClass","allUI","document","getElementById","setTimeout","Home"],"mappings":"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","sourcesContent":["\n\nimport ReactDOM from 'react-dom'\nimport React from 'react'\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\n\n\nlet starUsers = [];\nlet totalLength = 0;\nlet speciesList = []\nlet currentSearch=[]\n\nfunction searchForUser(passed){\n\n    console.log(passed)\n}\n\nconst SearchBar = ({keyword,setKeyword}) => {\n   \n    return (\n      <input \n       className=\"search\"\n       key=\"random1\"\n       value={keyword}\n       placeholder={\"Search for user\"}\n       onChange={(e) => searchForUser(e.target.value)}\n      />\n    );\n  }\n\nfunction addUser(speciesList, species, user, starUsers) {\n    if (speciesList.indexOf(species) == -1) {\n        speciesList.push(species)\n    }\n\n    user[\"species\"] = species\n    starUsers.push(user)\n}\n\nfunction getStarUsers() {\n\n    axios.get('https://swapi.dev/api/people/')\n        .then(response => {\n\n            var starData = (response.data.results)\n            totalLength = starData.length\n\n            for (let user of starData) {\n\n                let species = user[\"species\"]\n\n                if (species.length == 0) {\n\n                    species = \"Human\"\n                    addUser(speciesList, species, user, starUsers)\n                }\n\n                else {\n                    axios.get(species)\n                        .then(spResponse => {\n                            species = spResponse.data[\"name\"]\n                            addUser(speciesList, species, user, starUsers)\n                        })\n                }\n            }\n            function waitForCalls() {\n\n                if (starUsers.length == totalLength) {\n\n                    let sortedList = []\n\n                    while (speciesList.length > 0) {\n\n                        var currentSpecies = speciesList[speciesList.length - 1]\n\n                        for (let user of starUsers) {\n\n                            if (user[\"species\"] == currentSpecies) {\n                                sortedList.push(user)\n                            }\n                        }\n\n                        speciesList.pop(currentSpecies)\n                    }\n\n                    function goToPage(passedName) {\n                        window.location.href = 'http://localhost:3000/user/' + passedName;\n                        console.log(passedName)\n                    }\n\n                    var allcard = starUsers.map(starUser => {\n\n                        var titleClass = \"title \" + starUser['species']\n                        var typeClass = \"type \" + starUser['species']\n\n                        return <div onClick={() => goToPage(starUser['name'])} className={titleClass} key={starUser['name']}>{starUser['name']}\n                            <div className={typeClass} key={starUser['name'] + starUser['species']}>{starUser['species']}\n                            </div>\n                        </div>\n                    })\n                    var allUI=<h1 className=\"noBorder bigTitle\">\n                        &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; Star Records\n                        <SearchBar></SearchBar>\n                        <br></br>\n                        {allcard}\n                    </h1>\n                   \n                        ReactDOM.render(allUI, document.getElementById('root'));\n\n                }\n\n                        else {\n                            setTimeout(waitForCalls, 200);\n                }\n            }\n                        waitForCalls()\n        }\n                        )\n}\n\n                        export default function Home() {\n                            getStarUsers()\n    return <p></p>\n}"]},"metadata":{},"sourceType":"module"}