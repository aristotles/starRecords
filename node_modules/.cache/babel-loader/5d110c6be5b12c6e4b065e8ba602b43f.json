{"ast":null,"code":"var _jsxFileName = \"/Users/samuel/starjosh/src/Home.js\";\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet starUsers = [];\nlet totalLength = 0;\nlet speciesList = [];\nlet currentSearch = [];\n\nfunction createUI() {\n  let sortedList = [];\n\n  while (speciesList.length > 0) {\n    var currentSpecies = speciesList[speciesList.length - 1];\n\n    for (let user of starUsers) {\n      if (user[\"species\"] == currentSpecies) {\n        sortedList.push(user);\n      }\n    }\n\n    speciesList.pop(currentSpecies);\n  }\n\n  function goToPage(passedName) {\n    window.location.href = 'http://localhost:3000/user/' + passedName;\n    console.log(passedName);\n  }\n\n  var allcard = starUsers.map(starUser => {\n    var titleClass = \"title \" + starUser['species'];\n    var typeClass = \"type \" + starUser['species'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => goToPage(starUser['name']),\n      className: titleClass,\n      children: [starUser['name'], /*#__PURE__*/_jsxDEV(\"div\", {\n        className: typeClass,\n        children: starUser['species']\n      }, starUser['name'] + starUser['species'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }, this)]\n    }, starUser['name'], true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 32\n    }, this);\n  });\n\n  var allUI = /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"noBorder bigTitle\",\n    children: [\"\\xA0\\xA0\\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 \\xA0\\xA0 Star Records\", /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this), allcard]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 31\n  }, this);\n\n  currentSearch = starUsers;\n  ReactDOM.render(allUI, document.getElementById('root'));\n}\n\nfunction searchForUser(passed) {\n  console.log(currentSearch);\n\n  for (let user of currentSearch) {\n    console.log(user[\"name\"]);\n  }\n}\n\nconst SearchBar = ({\n  keyword,\n  setKeyword\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"search\",\n    value: keyword,\n    placeholder: \"Search for user\",\n    onChange: e => searchForUser(e.target.value)\n  }, \"random1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n};\n\n_c = SearchBar;\n\nfunction addUser(speciesList, species, user, starUsers) {\n  if (speciesList.indexOf(species) == -1) {\n    speciesList.push(species);\n  }\n\n  user[\"species\"] = species;\n  starUsers.push(user);\n}\n\nfunction getStarUsers() {\n  axios.get('https://swapi.dev/api/people/').then(response => {\n    var starData = response.data.results;\n    totalLength = starData.length;\n\n    for (let user of starData) {\n      let species = user[\"species\"];\n\n      if (species.length == 0) {\n        species = \"Human\";\n        addUser(speciesList, species, user, starUsers);\n      } else {\n        axios.get(species).then(spResponse => {\n          species = spResponse.data[\"name\"];\n          addUser(speciesList, species, user, starUsers);\n        });\n      }\n    }\n\n    function waitForCalls() {\n      if (starUsers.length == totalLength) {\n        createUI();\n      } else {\n        setTimeout(waitForCalls, 200);\n      }\n    }\n\n    waitForCalls();\n  });\n}\n\nexport default function Home() {\n  getStarUsers();\n  return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 12\n  }, this);\n}\n_c2 = Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/samuel/starjosh/src/Home.js"],"names":["ReactDOM","React","render","axios","starUsers","totalLength","speciesList","currentSearch","createUI","sortedList","length","currentSpecies","user","push","pop","goToPage","passedName","window","location","href","console","log","allcard","map","starUser","titleClass","typeClass","allUI","document","getElementById","searchForUser","passed","SearchBar","keyword","setKeyword","e","target","value","addUser","species","indexOf","getStarUsers","get","then","response","starData","data","results","spResponse","waitForCalls","setTimeout","Home"],"mappings":"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","sourcesContent":["\n\nimport ReactDOM from 'react-dom'\nimport React from 'react'\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\n\n\nlet starUsers = [];\nlet totalLength = 0;\nlet speciesList = []\nlet currentSearch=[]\n\nfunction createUI(){\n    let sortedList = []\n\n                    while (speciesList.length > 0) {\n\n                        var currentSpecies = speciesList[speciesList.length - 1]\n\n                        for (let user of starUsers) {\n\n                            if (user[\"species\"] == currentSpecies) {\n                                sortedList.push(user)\n                            }\n                        }\n\n                        speciesList.pop(currentSpecies)\n                    }\n\n                    function goToPage(passedName) {\n                        window.location.href = 'http://localhost:3000/user/' + passedName;\n                        console.log(passedName)\n                    }\n\n                    var allcard = starUsers.map(starUser => {\n\n                        var titleClass = \"title \" + starUser['species']\n                        var typeClass = \"type \" + starUser['species']\n\n                        return <div onClick={() => goToPage(starUser['name'])} className={titleClass} key={starUser['name']}>{starUser['name']}\n                            <div className={typeClass} key={starUser['name'] + starUser['species']}>{starUser['species']}\n                            </div>\n                        </div>\n                    })\n                    var allUI=<h1 className=\"noBorder bigTitle\">\n                        &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; Star Records\n                        <SearchBar></SearchBar>\n                        <br></br>\n                        {allcard}\n                    </h1>\n                   \n                    currentSearch=starUsers\n\n                        ReactDOM.render(allUI, document.getElementById('root'));\n}\n\nfunction searchForUser(passed){\n    console.log(currentSearch)\n    for(let user of currentSearch){\n        console.log(user[\"name\"])\n    }\n}\n\nconst SearchBar = ({keyword,setKeyword}) => {\n   \n    return (\n      <input \n       className=\"search\"\n       key=\"random1\"\n       value={keyword}\n       placeholder={\"Search for user\"}\n       onChange={(e) => searchForUser(e.target.value)}\n      />\n    );\n  }\n\nfunction addUser(speciesList, species, user, starUsers) {\n    if (speciesList.indexOf(species) == -1) {\n        speciesList.push(species)\n    }\n\n    user[\"species\"] = species\n    starUsers.push(user)\n}\n\nfunction getStarUsers() {\n\n    axios.get('https://swapi.dev/api/people/')\n        .then(response => {\n\n            var starData = (response.data.results)\n            totalLength = starData.length\n\n            for (let user of starData) {\n\n                let species = user[\"species\"]\n\n                if (species.length == 0) {\n\n                    species = \"Human\"\n                    addUser(speciesList, species, user, starUsers)\n                }\n\n                else {\n                    axios.get(species)\n                        .then(spResponse => {\n                            species = spResponse.data[\"name\"]\n                            addUser(speciesList, species, user, starUsers)\n                        })\n                }\n            }\n            function waitForCalls() {\n\n                if (starUsers.length == totalLength) {\n\n                    createUI()\n\n                }\n\n                        else {\n                            setTimeout(waitForCalls, 200);\n                }\n            }\n                        waitForCalls()\n        }\n                        )\n}\n\n                        export default function Home() {\n                            getStarUsers()\n    return <p></p>\n}"]},"metadata":{},"sourceType":"module"}