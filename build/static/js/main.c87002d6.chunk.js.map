{"version":3,"sources":["Home.js","User.js","App.js","index.js"],"names":["sortedList","starUsers","totalLength","speciesList","SearchBar","keyword","setKeyword","className","value","placeholder","onChange","e","passed","user","toLowerCase","goToPage","searchForUser","target","passedName","window","location","href","waitForCalls","length","currentSpecies","push","pop","sortUsers","allcard","map","starUser","titleClass","typeClass","onClick","allUI","ReactDOM","render","document","getElementById","createUI","setTimeout","addUser","species","indexOf","Home","axios","get","then","response","starData","data","results","spResponse","userList","arrayCalls","type","updateName","oldName","searchTerm","object","finalCard","join","comboCard","getUserData","split","User","App","path"],"mappings":"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","file":"static/js/main.c87002d6.chunk.js","sourcesContent":["\n\nimport ReactDOM from 'react-dom'\nimport React from 'react'\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\n\nlet sortedList = []\nlet starUsers = [];\nlet totalLength = 0;\nlet speciesList = []\n\n//searchbar UI component\nconst SearchBar = ({ keyword, setKeyword }) => {\n\n    return (\n        <input\n            className=\"search\"\n            key=\"random1\"\n            value={keyword}\n            placeholder={\"Search for user\"}\n            onChange={(e) => searchForUser(e.target.value)}\n        />\n    );\n}\n\n//searchbar main function\nfunction searchForUser(passed) {\n  \n    for (let user of starUsers) {\n        if(user[\"name\"].toLowerCase() == passed.toLowerCase()){\n           goToPage(user[\"name\"])\n        }\n    }\n}\n\n//goes to a user page\nfunction goToPage(passedName) {\n    window.location.href = 'http://localhost:3000/user/' + passedName;\n}\n\n//waits to make sure http calls completed before rendering UI\nfunction waitForCalls() {\n\n    if (starUsers.length == totalLength) {\n        createUI()\n    }\n\n    else {\n        setTimeout(waitForCalls, 200);\n    }\n}\n\n//sorts users by species\nfunction sortUsers(){\n    while (speciesList.length > 0) {\n        var currentSpecies = speciesList[speciesList.length - 1]\n     \n        for (let user of starUsers) {\n            if (user[\"species\"] == currentSpecies) {\n                sortedList.push(user)\n            }\n        }\n\n        speciesList.pop(currentSpecies)\n    }\n\n}\n\n//combines all UI components together\nfunction createUI() {\n\n    sortUsers()\n    \n    var allcard = starUsers.map(starUser => {\n\n        var titleClass = \"title \" + starUser['species']\n        var typeClass = \"type \" + starUser['species']\n\n        return <div onClick={() => goToPage(starUser['name'])} className={titleClass} key={starUser['name']}>{starUser['name']}\n            <div className={typeClass} key={starUser['name'] + starUser['species']}>{starUser['species']}\n            </div>\n        </div>\n    })\n\n    var allUI = <h1 className=\"noBorder bigTitle\">\n        &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; Star Records\n        <SearchBar></SearchBar>\n        <br></br>\n        {allcard}\n    </h1>\n\n    ReactDOM.render(allUI, document.getElementById('root'));\n}\n\n//add user function, to keep DRY\nfunction addUser(speciesList, species, user, starUsers) {\n    if (speciesList.indexOf(species) == -1) {\n        speciesList.push(species)\n    }\n\n    user[\"species\"] = species\n    starUsers.push(user)\n}\n\n//gets users and their species\nfunction getStarUsers() {\n\n    axios.get('https://swapi.dev/api/people/')\n        .then(response => {\n\n            var starData = (response.data.results)\n            totalLength = starData.length\n\n            for (let user of starData) {\n\n                let species = user[\"species\"]\n\n                if (species.length == 0) {\n\n                    species = \"Human\"\n                    addUser(speciesList, species, user, starUsers)\n                }\n\n                else {\n                    axios.get(species)\n                        .then(spResponse => {\n                            species = spResponse.data[\"name\"]\n                            addUser(speciesList, species, user, starUsers)\n                        })\n                }\n            }\n\n            waitForCalls()\n        }\n        )\n}\n\nexport default function Home() {\n    getStarUsers()\n    return <p></p>\n}","\nimport ReactDOM from 'react-dom'\nimport React from 'react'\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\n\nvar userList=[]\n\n\nfunction goToPage() {\n    window.location.href = 'http://localhost:3000/home'\n}\n\n//calls for multiple record results\nfunction arrayCalls(type){\n\n    var updateName =\"\"\n    var oldName=\"\"\n    var searchTerm=\"name\"\n\n    if(type==\"ships\"){\n        updateName=\"newShips\"\n        oldName=\"starships\"\n    }\n    if(type==\"vehicles\"){\n        updateName=\"newVehicles\"\n        oldName=\"vehicles\"\n    }\n    if(type==\"films\"){\n        updateName=\"newFilms\"\n        oldName=\"films\"\n        searchTerm=\"title\"\n    }\n\n    //if empty no call needed\n    if (userList[oldName].length == 0) {\n        userList[updateName] = \"okay\"\n    }\n\n    else {\n        for (let object of userList[oldName]) {\n            axios.get(object)\n                .then(spResponse => {\n                    if (userList[updateName] != \"no\") {\n                        userList[updateName].push(spResponse.data[searchTerm])\n                    }\n                    else {\n                        userList[updateName] = [spResponse.data[searchTerm]]\n                    }\n                })\n        }\n    }\n}\n\nfunction getHome(){\n    axios.get(userList[\"homeworld\"])\n    .then(spResponse => {\n        userList[\"newHome\"] = (spResponse.data[\"name\"])\n    })\n}\n\nfunction waitForCalls() {\n\n    var finalCard = [];\n\n    if (userList[\"newVehicles\"] != \"no\" && userList[\"newFilms\"] != \"no\" && userList[\"newShips\"] != \"no\") {\n  \n        finalCard.push(<div className=\"soleUser\"> <p className=\"category\">Born:&nbsp;&nbsp; </p>{userList[\"birth_year\"]}  </div>)\n        finalCard.push(<div className=\"soleUser\"> <p className=\"category\">Eye Color:&nbsp;&nbsp; </p>{userList[\"eye_color\"]}  </div>)\n        finalCard.push(<div className=\"soleUser\"> <p className=\"category\">Height:&nbsp;&nbsp; </p>{userList[\"height\"]}  </div>)\n        finalCard.push(<div className=\"soleUser\"> <p className=\"category\">Mass: &nbsp;&nbsp; </p>{userList[\"mass\"]}  </div>)\n        finalCard.push(<div className=\"soleUser\"> <p className=\"category\">Gender: &nbsp;&nbsp; </p>{userList[\"gender\"]}  </div>)\n        finalCard.push(<div className=\"soleUser\"> <p className=\"category\">Home: &nbsp;&nbsp;</p>{userList[\"newHome\"]}  </div>)\n        finalCard.push(<div className=\"soleUser\"> <p className=\"category\">Skin: &nbsp;&nbsp;</p>{userList[\"skin_color\"]}  </div>)\n\n        if (userList[\"species\"] == 0) {\n            userList[\"species\"] = \"Human\"\n            finalCard.push(<div className=\"soleUser\"> <p className=\"category\">Hair Color:&nbsp;&nbsp; </p>{userList[\"hair_color\"]}  </div>)\n        }\n        else {\n            userList[\"species\"] = \"Droid\"\n        }\n\n        finalCard.push(<div className=\"soleUser\"> <p className=\"category\">Species:&nbsp;&nbsp; </p>{userList[\"species\"]}  </div>)\n\n        if (userList[\"newVehicles\"] != \"okay\") {\n            finalCard.push(<div className=\"soleUser\"> <p className=\"category\">Vehicles: &nbsp;&nbsp;</p>{userList[\"newVehicles\"].join()} </div>)\n        }\n\n        if (userList[\"newVFilms\"] != \"okay\") {\n            finalCard.push(<div className=\"soleUser\"> <p className=\"category\">Films: &nbsp;&nbsp;</p>{userList[\"newFilms\"].join()} </div>)\n        }\n\n        if (userList[\"newShips\"] != \"okay\") {\n            finalCard.push(<div className=\"soleUser\"> <p className=\"category\">Ships: &nbsp;&nbsp;</p>{userList[\"newShips\"].join()} </div>)\n        }\n\n        let comboCard =\n            <div>\n                <div onClick={() => goToPage()} className=\"backArrow\">RETURN</div>\n                <h1 className=\"title soleUser noBorder\">{userList[\"name\"]}\n                    {finalCard}\n                </h1>\n            </div>\n        ReactDOM.render(comboCard, document.getElementById('root'));\n    }\n\n    else {\n        setTimeout(waitForCalls, 200);\n    }\n}\n\nfunction getUserData() {\n\n    axios.get('https://swapi.dev/api/people/' + '?search=' + window.location.href.split('/')[4])\n        .then(response => {\n\n            userList = response.data.results[0]\n\n            userList[\"newShips\"] = \"no\"\n            userList[\"newFilms\"] = \"no\"\n            userList[\"newVehicles\"] = \"no\"\n\n            getHome()\n           \n            arrayCalls(\"vehicles\")\n            arrayCalls(\"ships\")\n            arrayCalls(\"films\")\n           \n            waitForCalls()\n        })\n}\n\nexport default function User() {\n    getUserData()\n    return <p>Hello, world!</p>\n}","\nimport './App.css';\nimport ReactDOM from 'react-dom'\nimport React from 'react'\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\nimport Home from './Home';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport User from './User';\n\nfunction App() {\n  if(window.location.href=='http://localhost:3000/'){\n    window.location.href = 'http://localhost:3000/home';\n  }\n  return (\n    <div className=\"App\">\n     <BrowserRouter>\n        <Switch>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n          <Route path=\"/user\">\n            <User />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { render } from \"react-dom\";\nimport axios from \"axios\";\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render((\n  <BrowserRouter>\n    <App /> {/* The various pages will be displayed by the `Main` component. */}\n  </BrowserRouter>\n  ), document.getElementById('root')\n);\n\n"],"sourceRoot":""}